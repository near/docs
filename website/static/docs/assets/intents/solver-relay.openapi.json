{
  "openapi": "3.0.3",
  "info": {
    "title": "Defuse Solver Relay API",
    "description": "Solver Relay is an additional system component that optimizes frontends←→solvers quoting, and intent discovery process. Any frontend app may use a generic foundation-hosted Solver Relay or launch its own instance to customize preferred solver accounts.",
    "version": "v0.0.1"
  },
  "servers": [
    {
      "description": "Http endpoint for users",
      "url": "https://solver-relay-v2.chaindefuser.com/rpc"
    },
    {
      "description": "WebSocket endpoint for solvers",
      "url": "wss://solver-relay-v2.chaindefuser.com/ws"
    }
  ],
  "paths": {
    "quote": {
      "post": {
        "tags": [
          "/rpc"
        ],
        "summary": "Get quote request",
        "description": "Estimate potential output for user intent",
        "operationId": "quote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                }
              }
            }
          }
        }
      }
    },
    "publish_intent": {
      "post": {
        "tags": [
          "/rpc"
        ],
        "summary": "Publish intent request",
        "description": "Send a signed intent for execution",
        "operationId": "publish_intent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishIntentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublishIntentResponse"
                }
              }
            }
          }
        }
      }
    },
    "get_status": {
      "post": {
        "tags": [
          "/rpc"
        ],
        "summary": "Get intent status request",
        "description": "Check the status of the intent execution.",
        "operationId": "get_status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntentStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntentStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "subscribe": {
      "post": {
        "tags": [
          "/ws"
        ],
        "summary": "Subscribe to quote requests",
        "description": "",
        "operationId": "subscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/JsonRpcRequest"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "params": {
                        "type": "array",
                        "items": {},
                        "default": [
                          "quote"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/JsonRpcResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "string",
                          "default": "00000000-0000-0000-0000-000000000000"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "unsubscribe": {
      "post": {
        "tags": [
          "/ws"
        ],
        "summary": "Unsubscribe from the stream",
        "description": "",
        "operationId": "unsubscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/JsonRpcRequest"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "params": {
                        "type": "array",
                        "items": {},
                        "default": [
                          "00000000-0000-0000-0000-000000000000"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/JsonRpcResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "string",
                          "default": "OK"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "quote_response": {
      "post": {
        "tags": [
          "/ws"
        ],
        "summary": "Send offer",
        "description": "",
        "operationId": "quote_response",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolverQuoteResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/JsonRpcResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "string",
                          "default": "OK"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JsonRpcRequest": {
        "type": "object",
        "required": [
          "method",
          "id",
          "jsonrpc"
        ],
        "properties": {
          "method": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          "jsonrpc": {
            "type": "string",
            "default": "2.0"
          }
        },
        "discriminator": {
          "propertyName": "method_name"
        }
      },
      "JsonRpcResponse": {
        "type": "object",
        "required": [
          "id",
          "jsonrpc"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          "jsonrpc": {
            "type": "string",
            "default": "2.0"
          }
        }
      },
      "IntentStatusRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "default": "get_status"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "required": [
                  "intent_hash"
                ],
                "properties": {
                  "intent_hash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "IntentStatusResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcResponse"
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/IntentStatusData"
                  },
                  "intent_hash": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/IntentStatusIntentStatus"
                  }
                }
              }
            }
          }
        ]
      },
      "IntentStatusData": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "IntentStatusIntentStatus": {
        "type": "string"
      },
      "PublishIntentDeadline": {
        "type": "object",
        "properties": {
          "block_number": {
            "minimum": 0,
            "type": "integer"
          },
          "timestamp": {
            "minimum": 0,
            "type": "integer"
          }
        }
      },
      "PublishIntentContent": {
        "type": "object",
        "properties": {
          "signer_id": {
            "type": "string"
          },
          "deadline": {
            "$ref": "#/components/schemas/PublishIntentDeadline"
          },
          "intents": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          }
        }
      },
      "PublishIntentRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "default": "publish_intent"
              },
              "params": {
                "type": "object",
                "required": [
                  "quote_hashes",
                  "signed_data",
                  "content",
                  "public_key",
                  "signature"
                ],
                "properties": {
                  "quote_hashes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "signed_data": {
                    "$ref": "#/components/schemas/SignedIntentData"
                  }
                }
              }
            }
          }
        ]
      },
      "PublishIntentResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcResponse"
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "type": "object",
                "properties": {
                  "intent_hash": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        ]
      },
      "QuoteRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcRequest"
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "default": "get_status"
              },
              "params": {
                "title": "Parameters",
                "type": "object",
                "required": [
                  "intent",
                  "data"
                ],
                "properties": {
                  "defuse_asset_identifier_in": {
                    "type": "string"
                  },
                  "defuse_asset_identifier_out": {
                    "type": "string"
                  },
                  "amount_in": {
                    "type": "string"
                  },
                  "min_deadline_ms": {
                    "minimum": 0,
                    "type": "integer",
                    "default": 120000
                  }
                }
              }
            }
          }
        ]
      },
      "QuoteResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcResponse"
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "type": "object",
                "properties": {
                  "quotes": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "object",
                      "properties": {
                        "quote_hash": {
                          "type": "string"
                        },
                        "defuse_asset_identifier_in": {
                          "type": "string"
                        },
                        "defuse_asset_identifier_out": {
                          "type": "string"
                        },
                        "amount_in": {
                          "type": "string"
                        },
                        "amount_out": {
                          "type": "string"
                        },
                        "expiration_time": {
                          "minimum": 0,
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "SignedIntentData": {
        "type": "object",
        "properties": {
          "standard": {
            "type": "string"
          },
          "message": {
            "$ref": "#/components/schemas/PublishIntentContent"
          },
          "nonce": {
            "type": "string"
          },
          "public_key": {
            "type": "string"
          },
          "recipient": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          }
        }
      },
      "SolverQuoteResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonRpcResponse"
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "type": "object",
                "properties": {
                  "quote_id": {
                    "type": "string"
                  },
                  "quote_output": {
                    "type": "object",
                    "properties": {
                      "amount_out": {
                        "type": "string"
                      }
                    }
                  },
                  "signed_data": {
                    "$ref": "#/components/schemas/SignedIntentData"
                  },
                  "other_quote_hashes": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    }
  },
  "x-envelope": "jsonrpc-2.0"
}